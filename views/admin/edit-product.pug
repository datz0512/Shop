extends ../layouts/main-layout.pug

block styles   
    link(rel="stylesheet", href="/css/forms.css")
    link(rel="stylesheet", href="/css/product.css")

block content   
    main       
        if errorMessage 
            div.user-message.user-message--error #{errorMessage}
        form.product-form(action=(editing ? '/admin/edit-product' : '/admin/add-product') method="POST" novalidate enctype="multipart/form-data")
            .form-control
                label(for="title") Title
                input(
                    class=validationErrors.find(e => e.path === 'title') ? 'invalid' : ''
                    type="text" 
                    name="title" 
                    id="title" 
                    value=((editing || hasError) && product.title))
            //- .form-control
            //-     label(for="imgUrl") Image URL
            //-     input(
            //-         class=validationErrors.find(e => e.path === 'imgUrl') ? 'invalid' : ''
            //-         type="url" 
            //-         name="imgUrl" 
            //-         id="imgUrl" 
            //-         value=((editing || hasError) && product.imgUrl))
            .form-control
                label(for="imgUrl") Image
                input(
                    type="file" 
                    name="image" 
                    id="image")
            .form-control
                label(for="price") Price
                input(
                    class=validationErrors.find(e => e.path === 'price') ? 'invalid' : ''
                    type="number" 
                    name="price" 
                    id="price" 
                    step="0.01" 
                    value=((editing || hasError) && product.price))
            .form-control
                label(for="desc") Description
                textarea(
                    class=validationErrors.find(e => e.path === 'desc') ? 'invalid' : ''
                    name="desc" 
                    rows="5", 
                    id="desc") #{(editing|| hasError) ? product.desc : ''}
            if editing 
                input(type="hidden", name='productId',value=product._id)
            button.btn.mt-1(type="submit") #{editing ? 'Update Product' : 'Add Product'} 
            input(type="hidden", name='_csrf', value=csrfToken)